{"ast":null,"code":"var _jsxFileName = \"/home/s1v4h3r3/Desktop/S1V4H3R3/WEB/FILE UPLOAD MERN/Frontend/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [billName, setBillName] = useState('');\n  const [billCategory, setBillCategory] = useState('');\n  const [billAmount, setBillAmount] = useState('');\n  const [billFile, setBillFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleFileChange = e => {\n    setBillFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation\n    if (!billName || !billCategory || !billAmount || !billFile) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n    if (isNaN(billAmount) || Number(billAmount) <= 0) {\n      setErrorMessage('Please enter a valid amount');\n      return;\n    }\n\n    // File type validation (optional)\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!allowedTypes.includes(billFile.type)) {\n      setErrorMessage('Invalid file type. Only JPEG, JPG, and PNG files are allowed.');\n      return;\n    }\n\n    // File size validation (optional)\n    if (billFile.size > 1024 * 1024) {\n      // 1MB\n      setErrorMessage('File is too large. Maximum size allowed is 1MB.');\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('billName', billName);\n    formData.append('billCategory', billCategory);\n    formData.append('billAmount', billAmount);\n    formData.append('file', billFile);\n\n    // Submit form\n    try {\n      const response = await axios.post('http://localhost:3000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Reset form fields and error message on successful upload\n      setBillName('');\n      setBillCategory('');\n      setBillAmount('');\n      setBillFile(null);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error uploading file:', error.response.data.error);\n      setErrorMessage('Failed to upload file. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: billName,\n          onChange: e => setBillName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: billCategory,\n          onChange: e => setBillCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: billAmount,\n          onChange: e => setBillAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Bill:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/jpeg, image/jpg, image/png\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"25PedhY57iy4JVk89Tx1HVVZbkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","billName","setBillName","billCategory","setBillCategory","billAmount","setBillAmount","billFile","setBillFile","errorMessage","setErrorMessage","handleFileChange","e","target","files","handleSubmit","preventDefault","isNaN","Number","allowedTypes","includes","type","size","formData","FormData","append","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","value","onChange","accept","_c","$RefreshReg$"],"sources":["/home/s1v4h3r3/Desktop/S1V4H3R3/WEB/FILE UPLOAD MERN/Frontend/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [billName, setBillName] = useState('');\n  const [billCategory, setBillCategory] = useState('');\n  const [billAmount, setBillAmount] = useState('');\n  const [billFile, setBillFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleFileChange = (e) => {\n    setBillFile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validation\n    if (!billName || !billCategory || !billAmount || !billFile) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n\n    if (isNaN(billAmount) || Number(billAmount) <= 0) {\n      setErrorMessage('Please enter a valid amount');\n      return;\n    }\n\n    // File type validation (optional)\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!allowedTypes.includes(billFile.type)) {\n      setErrorMessage('Invalid file type. Only JPEG, JPG, and PNG files are allowed.');\n      return;\n    }\n\n    // File size validation (optional)\n    if (billFile.size > 1024 * 1024) { // 1MB\n      setErrorMessage('File is too large. Maximum size allowed is 1MB.');\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('billName', billName);\n    formData.append('billCategory', billCategory);\n    formData.append('billAmount', billAmount);\n    formData.append('file', billFile);\n\n    // Submit form\n    try {\n      const response = await axios.post('http://localhost:3000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Reset form fields and error message on successful upload\n      setBillName('');\n      setBillCategory('');\n      setBillAmount('');\n      setBillFile(null);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error uploading file:', error.response.data.error);\n      setErrorMessage('Failed to upload file. Please try again later.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload Bill</h1>\n      {errorMessage && <div style={{ color: 'red' }}>{errorMessage}</div>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Bill Name:</label>\n          <input type=\"text\" value={billName} onChange={(e) => setBillName(e.target.value)} />\n        </div>\n        <div>\n          <label>Bill Category:</label>\n          <input type=\"text\" value={billCategory} onChange={(e) => setBillCategory(e.target.value)} />\n        </div>\n        <div>\n          <label>Bill Amount:</label>\n          <input type=\"text\" value={billAmount} onChange={(e) => setBillAmount(e.target.value)} />\n        </div>\n        <div>\n          <label>Upload Bill:</label>\n          <input type=\"file\" accept=\"image/jpeg, image/jpg, image/png\" onChange={handleFileChange} />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}