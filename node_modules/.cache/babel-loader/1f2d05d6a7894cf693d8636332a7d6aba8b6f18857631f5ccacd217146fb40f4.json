{"ast":null,"code":"var _jsxFileName = \"/home/s1v4h3r3/Desktop/S1V4H3R3/WEB/FILE UPLOAD MERN/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [billName, setBillName] = useState('');\n  const [billCategory, setBillCategory] = useState('');\n  const [billAmount, setBillAmount] = useState('');\n  const [billFile, setBillFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Predefined bill category options\n  const billCategories = ['Groceries', 'Utilities', 'Entertainment', 'Healthcare'];\n  const handleFileChange = e => {\n    setBillFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation and sanitization\n    if (!billName || !billCategory || !billAmount || !billFile) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n    if (!billCategories.includes(billCategory)) {\n      setErrorMessage('Invalid bill category');\n      return;\n    }\n\n    // Sanitize bill amount\n    const sanitizedAmount = parseFloat(billAmount);\n    if (isNaN(sanitizedAmount) || sanitizedAmount <= 0) {\n      setErrorMessage('Please enter a valid amount');\n      return;\n    }\n\n    // File type validation (optional)\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!allowedTypes.includes(billFile.type)) {\n      setErrorMessage('Invalid file type. Only JPEG, JPG, and PNG files are allowed.');\n      return;\n    }\n\n    // File size validation (optional)\n    if (billFile.size > 1024 * 1024) {\n      // 1MB\n      setErrorMessage('File is too large. Maximum size allowed is 1MB.');\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('billName', billName.trim()); // Trim leading and trailing spaces\n    formData.append('billCategory', billCategory);\n    formData.append('billAmount', sanitizedAmount);\n    formData.append('file', billFile);\n\n    // Submit form\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Reset form fields and error message on successful upload\n      setBillName('');\n      setBillCategory('');\n      setBillAmount('');\n      setBillFile(null);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error uploading file:', error.response.data.error);\n      setErrorMessage('Failed to upload file. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: billName,\n          onChange: e => setBillName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: billCategory,\n          onChange: e => setBillCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Bill Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), billCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: billAmount,\n          onChange: e => setBillAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Bill:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/jpeg, image/jpg, image/png\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"25PedhY57iy4JVk89Tx1HVVZbkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","billName","setBillName","billCategory","setBillCategory","billAmount","setBillAmount","billFile","setBillFile","errorMessage","setErrorMessage","billCategories","handleFileChange","e","target","files","handleSubmit","preventDefault","includes","sanitizedAmount","parseFloat","isNaN","allowedTypes","type","size","formData","FormData","append","trim","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","value","onChange","map","category","accept","_c","$RefreshReg$"],"sources":["/home/s1v4h3r3/Desktop/S1V4H3R3/WEB/FILE UPLOAD MERN/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [billName, setBillName] = useState('');\n  const [billCategory, setBillCategory] = useState('');\n  const [billAmount, setBillAmount] = useState('');\n  const [billFile, setBillFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Predefined bill category options\n  const billCategories = ['Groceries', 'Utilities', 'Entertainment', 'Healthcare'];\n\n  const handleFileChange = (e) => {\n    setBillFile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validation and sanitization\n    if (!billName || !billCategory || !billAmount || !billFile) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n\n    if (!billCategories.includes(billCategory)) {\n      setErrorMessage('Invalid bill category');\n      return;\n    }\n\n    // Sanitize bill amount\n    const sanitizedAmount = parseFloat(billAmount);\n\n    if (isNaN(sanitizedAmount) || sanitizedAmount <= 0) {\n      setErrorMessage('Please enter a valid amount');\n      return;\n    }\n\n    // File type validation (optional)\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!allowedTypes.includes(billFile.type)) {\n      setErrorMessage('Invalid file type. Only JPEG, JPG, and PNG files are allowed.');\n      return;\n    }\n\n    // File size validation (optional)\n    if (billFile.size > 1024 * 1024) { // 1MB\n      setErrorMessage('File is too large. Maximum size allowed is 1MB.');\n      return;\n    }\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('billName', billName.trim()); // Trim leading and trailing spaces\n    formData.append('billCategory', billCategory);\n    formData.append('billAmount', sanitizedAmount);\n    formData.append('file', billFile);\n\n    // Submit form\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Reset form fields and error message on successful upload\n      setBillName('');\n      setBillCategory('');\n      setBillAmount('');\n      setBillFile(null);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error uploading file:', error.response.data.error);\n      setErrorMessage('Failed to upload file. Please try again later.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload Bill</h1>\n      {errorMessage && <div style={{ color: 'red' }}>{errorMessage}</div>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Bill Name:</label>\n          <input type=\"text\" value={billName} onChange={(e) => setBillName(e.target.value)} />\n        </div>\n        <div>\n          <label>Bill Category:</label>\n          <select value={billCategory} onChange={(e) => setBillCategory(e.target.value)}>\n            <option value=\"\">Select Bill Category</option>\n            {billCategories.map((category) => (\n              <option key={category} value={category}>{category}</option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label>Bill Amount:</label>\n          <input type=\"text\" value={billAmount} onChange={(e) => setBillAmount(e.target.value)} />\n        </div>\n        <div>\n          <label>Upload Bill:</label>\n          <input type=\"file\" accept=\"image/jpeg, image/jpg, image/png\" onChange={handleFileChange} />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}